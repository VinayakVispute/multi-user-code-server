events {
    worker_connections 1024;
}

http {
    # Force IPv4 DNS resolution only
    resolver 8.8.8.8 1.1.1.1 ipv6=off valid=30s;
    resolver_timeout 5s;

    # Define upstream with explicit IPv4
    upstream auth_server {
        server unbiased-carefully-marmot.ngrok-free.app:443 max_fails=1 fail_timeout=30s;
        keepalive 2;
    }

    server {
        listen 80;
        server_name _;

        # Fixed auth location for ngrok
        location = /auth {
            internal;
            
            proxy_pass https://unbiased-carefully-marmot.ngrok-free.app/auth/validate/;
            
            # Critical ngrok SSL settings
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_ssl_name unbiased-carefully-marmot.ngrok-free.app;
            
            # Proper headers for ngrok
            proxy_set_header Host unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header SNI unbiased-carefully-marmot.ngrok-free.app;
            
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            
            # Pass original request info
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Method $request_method;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass auth headers
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Authorization $http_authorization;
            
            # Reduced timeouts
            proxy_connect_timeout 3s;
            proxy_read_timeout 3s;
            proxy_send_timeout 3s;
            
            # Enhanced logging
            access_log /var/log/nginx/auth.log;
            error_log /var/log/nginx/auth_error.log;
        }

        # Test endpoint to verify auth is working
        location = /auth-test {
            auth_request /auth;
            add_header Content-Type text/plain;
            return 200 "Auth is working!\n";
        }

        # Assets (no auth)
        location /assets/ {
            root /var/www/html;
            expires 1h;
        }

        # Health check (no auth)
        location /health {
            proxy_pass https://unbiased-carefully-marmot.ngrok-free.app/health;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_ssl_name unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header Host unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header SNI unbiased-carefully-marmot.ngrok-free.app;
        }

        # Heartbeat (protected)
        location /heartbeat {
            auth_request /auth;
            
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;
            auth_request_set $user_name $upstream_http_x_user_name;
            
            proxy_pass https://unbiased-carefully-marmot.ngrok-free.app/ping;
            proxy_ssl_server_name on;
            proxy_ssl_verify off;
            proxy_ssl_name unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header Host unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header SNI unbiased-carefully-marmot.ngrok-free.app;
            proxy_set_header X-User-ID $user_id;
            proxy_set_header X-User-Email $user_email;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Main location (protected)
        location / {
            auth_request /auth;
            
            # Handle auth errors
            error_page 401 403 500 502 503 504 = @auth_error;
            
            auth_request_set $user_id $upstream_http_x_user_id;
            auth_request_set $user_email $upstream_http_x_user_email;
            auth_request_set $user_name $upstream_http_x_user_name;
            
            # WebSocket and proxy settings
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header Accept-Encoding "";
            
            # User headers
            proxy_set_header X-User-ID $user_id;
            proxy_set_header X-User-Email $user_email;
            proxy_set_header X-User-Name $user_name;

            # Proxy to code-server
            proxy_pass http://127.0.0.1:8080/;

            # Inject heartbeat script
            proxy_buffering on;
            sub_filter_types text/html;
            sub_filter_once off;
            sub_filter '<head>' '<head><script defer src="/assets/heartbeat.js?v=1"></script>';
        }

        # Auth error handler
        location @auth_error {
            return 302 https://unbiased-carefully-marmot.ngrok-free.app/auth/sign-in?redirect_url=$scheme://$host$request_uri;
        }
    }

    # Enhanced logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log info;
}